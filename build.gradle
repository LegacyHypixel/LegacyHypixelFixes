plugins {
	id "fabric-loom" version "1.3-SNAPSHOT"
	id "legacy-looming" version "1.3-SNAPSHOT" // Version must be the same as fabric-loom's
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(legacy.yarn(project.minecraft_version, project.yarn_build))
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API provides hooks for events, item registration, and more. As most mods will need this, it's included by default.
	// If you know for a fact you don't, it's not required and can be safely removed.
	modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}"

	// You can retrieve a specific api module using this notation.
	// modImplementation(legacy.apiModule("legacy-fabric-item-groups-v1", project.fabric_version))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// Ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) it.options.release = 8

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}
